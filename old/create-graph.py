from shapely.geometry import Polygon, Point, MultiPolygon, GeometryCollection, LineString
import myBib as my
import os
import json
import networkx as nx
import matplotlib.pyplot as plt
import requests
import geopandas as gpd
import pandas as pd
from shapely.wkt import loads
import math
import matplotlib.pyplot as plt
from genericpath import exists

api_key = '5b3ce3597851110001cf6248a2a99fdd507247b7b125072bb1b8ebaa'
file = 'aquitaine-Aquitaine-1.3.geojson'

#loads file and returns nodes
def parse_geojson_nodes(geojson_file):
    with open(geojson_file, 'r') as file:
        data = json.load(file)
    nodes = {}
    for feature in data['features']:
        id = feature['properties']['@id']
        coords = tuple(feature['geometry']['coordinates'])

        nodes[id.split("/")[1]] = coords # split to remove the way/id
    return nodes

#returns the distance over motorway betewwen coord1 and coord2 using openrouteservice api
def get_motorway_distance(coord1, coord2, api_key):
    # Create the URL for the HTTP request
    url = f"https://api.openrouteservice.org/v2/directions/driving-car"
    params = {
        'api_key': api_key,
        'start': f"{coord1[0]},{coord1[1]}",  # OpenRouteService uses lng,lat
        'end': f"{coord2[0]},{coord2[1]}"
    }

    # Make the GET request to the OpenRouteService API
    response = requests.get(url, params=params)

    # Check if the request was successful
    if response.status_code == 200:
        # Parse the JSON response
        data = response.json()
        # Retrieve the distance from the response (distance is in meters)
        distance = data['features'][0]['properties']['segments'][0]['distance']   # convert to km
        return distance
    else:
        # print(f"Error: {response.status_code}")
        return None

#returns a list of service Stations, which are nearer than radius meters of coord using overpass api
def get_adjacent_stations(coord, nodes, node_ids, radius=20000):
    lat, lon = coord
    overpass_url = "http://overpass-api.de/api/interpreter"
    # This query looks for nodes tagged as highway=services or highway=rest_area within a radius of 1000 meters
    overpass_query = f"""
[out:json];
area[name = "Gironde, France"];
(way["highway"~"services|rest_area"](around:{radius},{lon},{lat});>;);
out center ;
    """

    response = requests.get(overpass_url, params={'data': overpass_query})
    adjacent_stations = []
    if response.status_code == 200:
        data = response.json()
        # print(data)
        for element in data['elements']:
            # Assuming you want to exclude the service station at the given coordinates
            element_type = element['type']
            if element_type == 'way':
                id = element['id']
                adjacent_stations.append(str(id))

    else:
        print(f"Overpass API Error: {response.status_code}")
    return adjacent_stations


def create_edges(nodes):
    edges = []
    adjacent_nodes = []
    node_ids = list(nodes.keys())
    radius = 50000

    for i in range(len(node_ids)):

        adjacent_nodes = get_adjacent_stations(nodes[node_ids[i]], nodes, node_ids, radius)

        for j in  adjacent_nodes :

            if j in node_ids  and j != node_ids[i] :

              distance = get_motorway_distance(nodes[node_ids[i]], nodes[j],'5b3ce3597851110001cf6248a2a99fdd507247b7b125072bb1b8ebaa')

              if distance != None and distance <= radius :
                  edges.append((node_ids[i], j , distance))

    return edges

def create_Graph(all_nodes, edges):
    G = nx.Graph()
    G.add_nodes_from(all_nodes.keys())
    G.add_weighted_edges_from(edges)
    return G

#---------main--------------------

all_nodes = parse_geojson_nodes(file)

# Load nodes (service stations and rest areas)
all_nodes = parse_geojson_nodes(file)

#create_edges takes a long time, so just reading it
#edges = create_edges(all_nodes)
edges_radius15 = [('28560885', '28673499', 10138.9),
 ('28560885', '74569893', 44246.6),
 ('28560885', '74570887', 24875.8),
 ('28560885', '131996046', 35964.3),
 ('28560885', '185144899', 45235.4),
 ('28560885', '586872756', 38203.3),
 ('28560885', '657290419', 28049.9),
 ('28560885', '1018760167', 38546.2),
 ('28560885', '1018760500', 36474.0),
 ('28560885', '1018760929', 31543.1),
 ('28560885', '1018761865', 22517.7),
 ('28673499', '28560885', 18557.0),
 ('28673499', '74569893', 34144.8),
 ('28673499', '74570887', 14774.0),
 ('28673499', '185144899', 42282.1),
 ('28673499', '437953672', 35333.2),
 ('28673499', '586872756', 31915.1),
 ('28673499', '657290419', 46583.7),
 ('28673499', '1018761865', 41051.5),
 ('55283118', '835854142', 17605.2),
 ('55283118', '835854143', 16795.2),
 ('55283118', '835857371', 13835.1),
 ('55283118', '835866914', 4680.8),
 ('74568990', '28944461', 35694.8),
 ('74568990', '74568993', 25650.2),
 ('74568990', '74569476', 32995.2),
 ('74568993', '74568990', 15627.3),
 ('74568993', '74569476', 7362.5),
 ('74568993', '74569893', 36086.3),
 ('74568993', '756963511', 42103.1),
 ('74569476', '28944461', 43955.8),
 ('74569476', '74568990', 8284.2),
 ('74569476', '74568993', 9301.0),
 ('74569476', '74569893', 29715.1),
 ('74569476', '756963511', 34760.0),
 ('74569893', '28560885', 33504.4),
 ('74569893', '28673499', 43620.1),
 ('74569893', '74568990', 37445.3),
 ('74569893', '74568993', 38462.1),
 ('74569893', '74569476', 30793.7),
 ('74569893', '74570887', 32181.1),
 ('74569893', '586872756', 48448.3),
 ('74569893', '756963511', 44992.7),
 ('74570887', '28560885', 32047.0),
 ('74570887', '28673499', 42162.7),
 ('74570887', '74569476', 47988.5),
 ('74570887', '74569893', 19398.3),
 ('74570887', '437953672', 39868.9),
 ('74570887', '586872756', 46990.9),
 ('102589020', '177944569', 36725.8),
 ('102589020', '177944570', 16431.9),
 ('102589020', '304357184', 38240.4),
 ('112550062', '473444133', 39393.8),
 ('112550062', '568913733', 42467.9),
 ('112550062', '568913736', 34124.6),
 ('129787660', '473889460', 46578.5),
 ('129787660', '569686250', 6754.6),
 ('129787660', '571000706', 42495.1),
 ('129787660', '1018748786', 38429.7),
 ('131338652', '131339008', 10693.5),
 ('131338652', '131339663', 25833.0),
 ('131338652', '131339880', 34393.2),
 ('131338652', '131992700', 29942.0),
 ('131338652', '473899739', 49451.6),
 ('131339008', '131339663', 15142.3),
 ('131339008', '131339880', 23702.5),
 ('131339008', '131340564', 43993.1),
 ('131339008', '470248189', 45590.3),
 ('131339008', '620249402', 45761.8),
 ('131339663', '131339008', 31846.3),
 ('131339663', '131339880', 9876.1),
 ('131339663', '131340564', 30166.7),
 ('131339663', '131341334', 49513.6),
 ('131339663', '131992700', 47463.7),
 ('131339663', '470248189', 31764.0),
 ('131339663', '620249402', 41424.4),
 ('131339880', '131339663', 24621.7),
 ('131339880', '131340564', 20357.7),
 ('131339880', '131341098', 42424.2),
 ('131339880', '131341334', 39704.6),
 ('131339880', '131379575', 47850.9),
 ('131339880', '470248189', 21954.9),
 ('131340068', '131339663', 21099.8),
 ('131340068', '131339880', 30283.2),
 ('131340068', '131340564', 19599.0),
 ('131340068', '131341098', 41665.5),
 ('131340068', '131341334', 38945.9),
 ('131340068', '131379575', 47092.2),
 ('131340068', '470248189', 19369.9),
 ('131340564', '131340068', 34954.6),
 ('131340564', '131341098', 22099.2),
 ('131340564', '131341334', 19379.6),
 ('131340564', '131379575', 27525.9),
 ('131341098', '131339663', 45522.6),
 ('131341098', '131340068', 24662.8),
 ('131341098', '131340564', 44021.8),
 ('131341098', '131341334', 12687.7),
 ('131341098', '131379575', 20834.0),
 ('131341098', '470248189', 43792.7),
 ('131341334', '131379575', 8447.1),
 ('131341334', '131379582', 41118.6),
 ('131379575', '131341098', 44536.4),
 ('131379575', '131341334', 45010.3),
 ('131379575', '131379582', 33113.2),
 ('131379582', '131340068', 36412.6),
 ('131379582', '131341098', 12065.3),
 ('131379582', '131341334', 12539.2),
 ('131379582', '131379575', 20685.5),
 ('131992700', '131338652', 21621.1),
 ('131992700', '131339008', 32235.1),
 ('131992700', '131339663', 47374.7),
 ('131992700', '470248189', 48100.7),
 ('131992700', '473895479', 49385.5),
 ('131992700', '473899739', 21267.6),
 ('131996046', '28673499', 38278.1),
 ('131996046', '185144899', 42566.7),
 ('131996046', '304357184', 42780.3),
 ('131996046', '550333909', 21618.6),
 ('131996046', '550333910', 26476.3),
 ('131996046', '586872756', 35534.6),
 ('131996046', '657290419', 24868.9),
 ('131996046', '1018760167', 2601.0),
 ('131996046', '1018760500', 4215.2),
 ('177210257', '28560885', 48798.4),
 ('177210257', '131996046', 45319.0),
 ('177944569', '102589020', 29424.2),
 ('177944569', '177944570', 45418.9),
 ('177944569', '568913733', 37333.4),
 ('177944570', '102589020', 13740.2),
 ('177944570', '177944569', 20730.2),
 ('177944570', '473409634', 37045.2),
 ('177944570', '570961267', 39426.1),
 ('177944570', '705583806', 26500.5),
 ('185144899', '177208540', 31924.6),
 ('185144899', '177210257', 41220.0),
 ('185144899', '318155504', 14213.3),
 ('185144899', '437953672', 46013.5),
 ('185144899', '473368368', 49507.2),
 ('304357184', '102589020', 43621.3),
 ('304357184', '177944570', 30317.5),
 ('304357184', '473409634', 17350.8),
 ('304357184', '550333910', 45314.4),
 ('304357184', '705583806', 28320.3),
 ('313824570', '28944461', 38095.8),
 ('313824570', '975588106', 27837.2),
 ('313824570', '1037202493', 24635.9),
 ('318155504', '177208540', 17842.0),
 ('318155504', '177210257', 27137.3),
 ('318155504', '185144899', 45408.6),
 ('318155504', '437953672', 31930.8),
 ('318155504', '473368368', 35424.5),
 ('318155504', '586872756', 42431.1),
 ('437953672', '28560885', 36031.9),
 ('437953672', '74570887', 33122.8),
 ('437953672', '131996046', 47690.2),
 ('437953672', '177208540', 31423.5),
 ('437953672', '177210257', 40718.8),
 ('437953672', '185144899', 19759.1),
 ('437953672', '318155504', 33932.6),
 ('437953672', '586872756', 17704.7),
 ('437953672', '657290419', 36035.7),
 ('437953672', '1018760500', 48199.9),
 ('437953672', '1018760929', 43269.0),
 ('437953672', '1018761865', 31566.5),
 ('470248189', '131339663', 30608.0),
 ('470248189', '131339880', 39791.5),
 ('470248189', '131340564', 28170.4),
 ('473368368', '177208540', 13328.3),
 ('473368368', '177210257', 22623.7),
 ('473368368', '185144899', 40894.9),
 ('473368368', '437953672', 27810.1),
 ('473368368', '586872756', 37917.4),
 ('473409634', '102589020', 26474.3),
 ('473409634', '177944569', 33464.3),
 ('473409634', '177944570', 13170.5),
 ('473409634', '304357184', 36216.3),
 ('473409634', '550333910', 48893.3),
 ('473409634', '705583806', 11173.3),
 ('473444133', '568913736', 38553.3),
 ('473444133', '569300995', 19373.6),
 ('473444133', '586855603', 15323.6),
 ('473444133', '586855604', 26869.6),
 ('473888794', '1018748786', 47451.2),
 ('473889460', '473888794', 18352.8),
 ('473889460', '1018748786', 25721.6),
 ('473891861', '129787660', 34301.0),
 ('473891861', '473444133', 40969.1),
 ('473891861', '568913736', 46025.7),
 ('473891861', '569686250', 41049.8),
 ('473891861', '571000706', 13348.2),
 ('473894472', '473889460', 36873.5),
 ('473894472', '1018748786', 28724.7),
 ('473895479', '131992700', 49318.6),
 ('473895479', '473899739', 30482.3),
 ('473895479', '570959891', 12951.0),
 ('473899739', '131338652', 40852.3),
 ('473899739', '131992700', 20228.9),
 ('473899739', '470248189', 37317.0),
 ('473899739', '473895479', 30210.8),
 ('473899739', '570959891', 41955.7),
 ('550333909', '131996046', 28763.5),
 ('550333909', '304357184', 21210.2),
 ('550333909', '473409634', 38124.3),
 ('550333909', '550333910', 4906.3),
 ('550333909', '657290419', 46830.7),
 ('550333909', '705583806', 49093.9),
 ('550333909', '1018760167', 27043.5),
 ('550333909', '1018760500', 28371.9),
 ('550333909', '1018760929', 36532.7),
 ('550333909', '1018761865', 44005.7),
 ('550333910', '131996046', 23876.5),
 ('550333910', '304357184', 35352.3),
 ('550333910', '550333909', 14190.6),
 ('550333910', '657290419', 41943.7),
 ('550333910', '1018760167', 22156.5),
 ('550333910', '1018760500', 23485.0),
 ('550333910', '1018760929', 31645.8),
 ('550333910', '1018761865', 39118.7),
 ('568913733', '112550062', 34129.1),
 ('568913733', '473444133', 18998.8),
 ('568913733', '568913736', 6564.4),
 ('568913733', '569300995', 38308.7),
 ('568913733', '570961263', 25243.9),
 ('568913733', '570961267', 34968.6),
 ('568913736', '112550062', 42192.4),
 ('568913736', '473444133', 39827.5),
 ('568913736', '568913733', 20828.7),
 ('568913736', '570961263', 19116.7),
 ('568913736', '570961267', 28841.5),
 ('569300995', '112550062', 39033.7),
 ('569300995', '473444133', 17617.8),
 ('569300995', '568913733', 39582.9),
 ('569300995', '568913736', 19191.5),
 ('569300995', '570961263', 37871.0),
 ('569300995', '570961267', 47595.7),
 ('569300995', '571000706', 42864.4),
 ('569300995', '586855603', 32877.7),
 ('569300995', '586855604', 44423.7),
 ('569340854', '586855604', 39288.5),
 ('569340854', '932363145', 11840.0),
 ('569686250', '129787660', 28158.6),
 ('569686250', '571000706', 35745.8),
 ('570959891', '473895479', 13753.8),
 ('570959891', '473899739', 42340.2),
 ('570961263', '102589020', 39828.2),
 ('570961263', '112550062', 33465.6),
 ('570961263', '177944569', 34647.8),
 ('570961263', '473444133', 47569.4),
 ('570961263', '568913733', 28570.7),
 ('570961263', '568913736', 35135.0),
 ('570961263', '570961267', 10369.8),
 ('570961267', '112550062', 41126.3),
 ('570961267', '473444133', 37260.6),
 ('570961267', '568913733', 18261.8),
 ('570961267', '568913736', 24826.1),
 ('570961267', '570961263', 18497.8),
 ('571000706', '473891861', 26690.4),
 ('571000706', '586855604', 39663.2),
 ('571000706', '932363145', 49226.1),
 ('586855603', '473444133', 43934.2),
 ('586855603', '473891861', 44137.0),
 ('586855603', '568913736', 45507.9),
 ('586855603', '569300995', 26328.2),
 ('586855603', '586855604', 12025.3),
 ('586855603', '932363145', 35373.1),
 ('586855604', '473444133', 32063.9),
 ('586855604', '568913736', 33637.6),
 ('586855604', '569300995', 14457.9),
 ('586855604', '586855603', 12073.0),
 ('586855604', '932363145', 46966.8),
 ('586872756', '28673499', 35901.2),
 ('586872756', '131996046', 30246.9),
 ('586872756', '185144899', 21002.3),
 ('586872756', '318155504', 35175.8),
 ('586872756', '437953672', 28509.6),
 ('586872756', '657290419', 18592.4),
 ('586872756', '1018760167', 32828.9),
 ('586872756', '1018760500', 30756.6),
 ('620249402', '131339663', 42522.0),
 ('657290419', '28673499', 32436.8),
 ('657290419', '74570887', 47173.8),
 ('657290419', '131996046', 23212.0),
 ('657290419', '185144899', 32691.1),
 ('657290419', '318155504', 46864.6),
 ('657290419', '437953672', 40198.3),
 ('705583806', '102589020', 37078.2),
 ('705583806', '177944569', 44068.2),
 ('705583806', '177944570', 23774.4),
 ('705583806', '304357184', 25305.9),
 ('705583806', '473409634', 10807.7),
 ('705583806', '550333910', 37982.8),
 ('756963511', '74568990', 42990.4),
 ('756963511', '74568993', 36581.3),
 ('756963511', '74569476', 43926.3),
 ('756963511', '74569893', 42274.8),
 ('835854142', '55283118', 17513.1),
 ('835854142', '835854143', 967.6),
 ('835854142', '835857371', 3834.8),
 ('835854142', '835866914', 22146.7),
 ('835854143', '55283118', 17023.2),
 ('835854143', '835854142', 846.3),
 ('835854143', '835857371', 3344.9),
 ('835854143', '835866914', 21656.9),
 ('835857371', '55283118', 13709.4),
 ('835857371', '835854142', 3997.7),
 ('835857371', '835854143', 3187.7),
 ('835857371', '835866914', 18343.1),
 ('835866914', '55283118', 4680.8),
 ('835866914', '835854142', 22238.9),
 ('835866914', '835854143', 21428.9),
 ('835866914', '835857371', 18468.8),
 ('932363145', '473891861', 44957.5),
 ('932363145', '569300995', 41767.4),
 ('932363145', '569340854', 34185.6),
 ('932363145', '586855603', 39382.5),
 ('932363145', '586855604', 27464.5),
 ('975588106', '28944461', 19045.0),
 ('975588106', '313824570', 25469.1),
 ('975588106', '1037202493', 6698.7),
 ('1018748786', '473888794', 28655.2),
 ('1018748786', '473889460', 10302.4),
 ('1018748786', '473894472', 28516.4),
 ('1018748786', '569686250', 39597.1),
 ('1018760167', '28673499', 38218.3),
 ('1018760167', '131996046', 4547.0),
 ('1018760167', '185144899', 42506.8),
 ('1018760167', '304357184', 41754.7),
 ('1018760167', '550333909', 20593.0),
 ('1018760167', '550333910', 25450.7),
 ('1018760167', '586872756', 35474.7),
 ('1018760167', '657290419', 25321.3),
 ('1018760167', '1018760500', 1630.8),
 ('1018760167', '1018760929', 12316.2),
 ('1018760167', '1018761865', 19789.1),
 ('1018760500', '28673499', 36166.8),
 ('1018760500', '131996046', 2374.4),
 ('1018760500', '185144899', 40455.3),
 ('1018760500', '304357184', 45135.7),
 ('1018760500', '437953672', 47962.5),
 ('1018760500', '550333909', 23974.0),
 ('1018760500', '550333910', 28831.7),
 ('1018760500', '586872756', 33423.2),
 ('1018760500', '657290419', 23269.8),
 ('1018760500', '1018760167', 1668.9),
 ('1018760500', '1018760929', 10264.7),
 ('1037202493', '28944461', 25631.8),
 ('522668166', '131339008', 46292.2),
 ('522668166', '131339663', 26320.3),
 ('522668166', '131339880', 35503.7),
 ('522668166', '131340564', 23882.6),
 ('522668166', '131341098', 45949.1),
 ('522668166', '131341334', 43229.5),
 ('522668166', '470248189', 22888.9),
 ('522668166', '473899739', 46512.8),
 ('522668166', '620249402', 41402.4),
 ('1184659307', '102589020', 19983.6),
 ('1184659307', '177944569', 14803.2),
 ('1184659307', '177944570', 35978.4),
 ('1184659307', '473409634', 43288.6),
 ('1184659307', '570961267', 33499.1),
 ('1184659307', '705583806', 32743.8),
 ('1451255485', '131339663', 22202.2),
 ('1451255485', '131339880', 31385.7),
 ('1451255485', '131340564', 19764.6),
 ('1451255485', '131341098', 41831.1),
 ('1451255485', '131341334', 39111.4),
 ('1451255485', '131379575', 47257.7),
 ('1451255485', '470248189', 13170.9),
 ('1854655902', '473889460', 32966.3),
 ('1854655902', '473894472', 39671.3),
 ('1854655902', '569686250', 30237.7),
 ('1854655902', '1018748786', 24817.5),
 ('2411229575', '473889460', 32832.2),
 ('2411229575', '473894472', 39537.2),
 ('2411229575', '569686250', 30103.6),
 ('2411229575', '1018748786', 24683.4),
 ('4675220807', '102589020', 47235.9),
 ('4675220807', '177944570', 33932.0),
 ('4675220807', '304357184', 17020.3),
 ('4675220807', '473409634', 20965.3),
 ('4675220807', '550333909', 44033.7),
 ('4675220807', '550333910', 29862.4),
 ('4675220807', '705583806', 31934.9),
 ('5296506241', '28673499', 39008.6),
 ('5296506241', '131996046', 14575.9),
 ('5296506241', '185144899', 39262.9),
 ('5296506241', '304357184', 49357.4),
 ('5296506241', '437953672', 46770.1),
 ('5296506241', '550333909', 28195.7),
 ('5296506241', '550333910', 33053.4),
 ('5296506241', '586872756', 32230.8),
 ('10799446246', '473894472', 32316.7),
 ('10799446246', '473895479', 42100.5),
 ('10799446246', '570959891', 30398.6)]
edges_radius50 = [('28560885', '28673499', 10138.9),
 ('28560885', '74569893', 44246.6),
 ('28560885', '74570887', 24875.8),
 ('28560885', '131996046', 35964.3),
 ('28560885', '185144899', 45235.4),
 ('28560885', '586872756', 38203.3),
 ('28560885', '657290419', 28049.9),
 ('28560885', '1018760167', 38546.2),
 ('28560885', '1018760500', 36474.0),
 ('28560885', '1018760929', 31543.1),
 ('28560885', '1018761865', 22517.7),
 ('28673499', '28560885', 18557.0),
 ('28673499', '74569893', 34144.8),
 ('28673499', '74570887', 14774.0),
 ('28673499', '185144899', 42282.1),
 ('28673499', '437953672', 35333.2),
 ('28673499', '586872756', 31915.1),
 ('28673499', '657290419', 46583.7),
 ('28673499', '1018761865', 41051.5),
 ('55283118', '835854142', 17605.2),
 ('55283118', '835854143', 16795.2),
 ('55283118', '835857371', 13835.1),
 ('55283118', '835866914', 4680.8),
 ('74568990', '28944461', 35694.8),
 ('74568990', '74568993', 25650.2),
 ('74568990', '74569476', 32995.2),
 ('74568993', '74568990', 15627.3),
 ('74568993', '74569476', 7362.5),
 ('74568993', '74569893', 36086.3),
 ('74568993', '756963511', 42103.1),
 ('74569476', '28944461', 43955.8),
 ('74569476', '74568990', 8284.2),
 ('74569476', '74568993', 9301.0),
 ('74569476', '74569893', 29715.1),
 ('74569476', '756963511', 34760.0),
 ('74569893', '28560885', 33504.4),
 ('74569893', '28673499', 43620.1),
 ('74569893', '74568990', 37445.3),
 ('74569893', '74568993', 38462.1),
 ('74569893', '74569476', 30793.7),
 ('74569893', '74570887', 32181.1),
 ('74569893', '586872756', 48448.3),
 ('74569893', '756963511', 44992.7),
 ('74570887', '28560885', 32047.0),
 ('74570887', '28673499', 42162.7),
 ('74570887', '74569476', 47988.5),
 ('74570887', '74569893', 19398.3),
 ('74570887', '437953672', 39868.9),
 ('74570887', '586872756', 46990.9),
 ('102589020', '177944569', 36725.8),
 ('102589020', '177944570', 16431.9),
 ('102589020', '304357184', 38240.4),
 ('112550062', '473444133', 39393.8),
 ('112550062', '568913733', 42467.9),
 ('112550062', '568913736', 34124.6),
 ('129787660', '473889460', 46578.5),
 ('129787660', '569686250', 6754.6),
 ('129787660', '571000706', 42495.1),
 ('129787660', '1018748786', 38429.7),
 ('131338652', '131339008', 10693.5),
 ('131338652', '131339663', 25833.0),
 ('131338652', '131339880', 34393.2),
 ('131338652', '131992700', 29942.0),
 ('131338652', '473899739', 49451.6),
 ('131339008', '131339663', 15142.3),
 ('131339008', '131339880', 23702.5),
 ('131339008', '131340564', 43993.1),
 ('131339008', '470248189', 45590.3),
 ('131339008', '620249402', 45761.8),
 ('131339663', '131339008', 31846.3),
 ('131339663', '131339880', 9876.1),
 ('131339663', '131340564', 30166.7),
 ('131339663', '131341334', 49513.6),
 ('131339663', '131992700', 47463.7),
 ('131339663', '470248189', 31764.0),
 ('131339663', '620249402', 41424.4),
 ('131339880', '131339663', 24621.7),
 ('131339880', '131340564', 20357.7),
 ('131339880', '131341098', 42424.2),
 ('131339880', '131341334', 39704.6),
 ('131339880', '131379575', 47850.9),
 ('131339880', '470248189', 21954.9),
 ('131340068', '131339663', 21099.8),
 ('131340068', '131339880', 30283.2),
 ('131340068', '131340564', 19599.0),
 ('131340068', '131341098', 41665.5),
 ('131340068', '131341334', 38945.9),
 ('131340068', '131379575', 47092.2),
 ('131340068', '470248189', 19369.9),
 ('131340564', '131340068', 34954.6),
 ('131340564', '131341098', 22099.2),
 ('131340564', '131341334', 19379.6),
 ('131340564', '131379575', 27525.9),
 ('131341098', '131339663', 45522.6),
 ('131341098', '131340068', 24662.8),
 ('131341098', '131340564', 44021.8),
 ('131341098', '131341334', 12687.7),
 ('131341098', '131379575', 20834.0),
 ('131341098', '470248189', 43792.7),
 ('131341334', '131379575', 8447.1),
 ('131341334', '131379582', 41118.6),
 ('131379575', '131341098', 44536.4),
 ('131379575', '131341334', 45010.3),
 ('131379575', '131379582', 33113.2),
 ('131379582', '131340068', 36412.6),
 ('131379582', '131341098', 12065.3),
 ('131379582', '131341334', 12539.2),
 ('131379582', '131379575', 20685.5),
 ('131992700', '131338652', 21621.1),
 ('131992700', '131339008', 32235.1),
 ('131992700', '131339663', 47374.7),
 ('131992700', '470248189', 48100.7),
 ('131992700', '473895479', 49385.5),
 ('131992700', '473899739', 21267.6),
 ('131996046', '28673499', 38278.1),
 ('131996046', '185144899', 42566.7),
 ('131996046', '304357184', 42780.3),
 ('131996046', '550333909', 21618.6),
 ('131996046', '550333910', 26476.3),
 ('131996046', '586872756', 35534.6),
 ('131996046', '657290419', 24868.9),
 ('131996046', '1018760167', 2601.0),
 ('131996046', '1018760500', 4215.2),
 ('177210257', '28560885', 48798.4),
 ('177210257', '131996046', 45319.0),
 ('177944569', '102589020', 29424.2),
 ('177944569', '177944570', 45418.9),
 ('177944569', '568913733', 37333.4),
 ('177944570', '102589020', 13740.2),
 ('177944570', '177944569', 20730.2),
 ('177944570', '473409634', 37045.2),
 ('177944570', '570961267', 39426.1),
 ('177944570', '705583806', 26500.5),
 ('185144899', '177208540', 31924.6),
 ('185144899', '177210257', 41220.0),
 ('185144899', '318155504', 14213.3),
 ('185144899', '437953672', 46013.5),
 ('185144899', '473368368', 49507.2),
 ('304357184', '102589020', 43621.3),
 ('304357184', '177944570', 30317.5),
 ('304357184', '473409634', 17350.8),
 ('304357184', '550333910', 45314.4),
 ('304357184', '705583806', 28320.3),
 ('313824570', '28944461', 38095.8),
 ('313824570', '975588106', 27837.2),
 ('313824570', '1037202493', 24635.9),
 ('318155504', '177208540', 17842.0),
 ('318155504', '177210257', 27137.3),
 ('318155504', '185144899', 45408.6),
 ('318155504', '437953672', 31930.8),
 ('318155504', '473368368', 35424.5),
 ('318155504', '586872756', 42431.1),
 ('437953672', '28560885', 36031.9),
 ('437953672', '74570887', 33122.8),
 ('437953672', '131996046', 47690.2),
 ('437953672', '177208540', 31423.5),
 ('437953672', '177210257', 40718.8),
 ('437953672', '185144899', 19759.1),
 ('437953672', '318155504', 33932.6),
 ('437953672', '586872756', 17704.7),
 ('437953672', '657290419', 36035.7),
 ('437953672', '1018760500', 48199.9),
 ('437953672', '1018760929', 43269.0),
 ('437953672', '1018761865', 31566.5),
 ('470248189', '131339663', 30608.0),
 ('470248189', '131339880', 39791.5),
 ('470248189', '131340564', 28170.4),
 ('473368368', '177208540', 13328.3),
 ('473368368', '177210257', 22623.7),
 ('473368368', '185144899', 40894.9),
 ('473368368', '437953672', 27810.1),
 ('473368368', '586872756', 37917.4),
 ('473409634', '102589020', 26474.3),
 ('473409634', '177944569', 33464.3),
 ('473409634', '177944570', 13170.5),
 ('473409634', '304357184', 36216.3),
 ('473409634', '550333910', 48893.3),
 ('473409634', '705583806', 11173.3),
 ('473444133', '568913736', 38553.3),
 ('473444133', '569300995', 19373.6),
 ('473444133', '586855603', 15323.6),
 ('473444133', '586855604', 26869.6),
 ('473888794', '1018748786', 47451.2),
 ('473889460', '473888794', 18352.8),
 ('473889460', '1018748786', 25721.6),
 ('473891861', '129787660', 34301.0),
 ('473891861', '473444133', 40969.1),
 ('473891861', '568913736', 46025.7),
 ('473891861', '569686250', 41049.8),
 ('473891861', '571000706', 13348.2),
 ('473894472', '473889460', 36873.5),
 ('473894472', '1018748786', 28724.7),
 ('473895479', '131992700', 49318.6),
 ('473895479', '473899739', 30482.3),
 ('473895479', '570959891', 12951.0),
 ('473899739', '131338652', 40852.3),
 ('473899739', '131992700', 20228.9),
 ('473899739', '470248189', 37317.0),
 ('473899739', '473895479', 30210.8),
 ('473899739', '570959891', 41955.7),
 ('550333909', '131996046', 28763.5),
 ('550333909', '304357184', 21210.2),
 ('550333909', '473409634', 38124.3),
 ('550333909', '550333910', 4906.3),
 ('550333909', '657290419', 46830.7),
 ('550333909', '705583806', 49093.9),
 ('550333909', '1018760167', 27043.5),
 ('550333909', '1018760500', 28371.9),
 ('550333909', '1018760929', 36532.7),
 ('550333909', '1018761865', 44005.7),
 ('550333910', '131996046', 23876.5),
 ('550333910', '304357184', 35352.3),
 ('550333910', '550333909', 14190.6),
 ('550333910', '657290419', 41943.7),
 ('550333910', '1018760167', 22156.5),
 ('550333910', '1018760500', 23485.0),
 ('550333910', '1018760929', 31645.8),
 ('550333910', '1018761865', 39118.7),
 ('568913733', '112550062', 34129.1),
 ('568913733', '473444133', 18998.8),
 ('568913733', '568913736', 6564.4),
 ('568913733', '569300995', 38308.7),
 ('568913733', '570961263', 25243.9),
 ('568913733', '570961267', 34968.6),
 ('568913736', '112550062', 42192.4),
 ('568913736', '473444133', 39827.5),
 ('568913736', '568913733', 20828.7),
 ('568913736', '570961263', 19116.7),
 ('568913736', '570961267', 28841.5),
 ('569300995', '112550062', 39033.7),
 ('569300995', '473444133', 17617.8),
 ('569300995', '568913733', 39582.9),
 ('569300995', '568913736', 19191.5),
 ('569300995', '570961263', 37871.0),
 ('569300995', '570961267', 47595.7),
 ('569300995', '571000706', 42864.4),
 ('569300995', '586855603', 32877.7),
 ('569300995', '586855604', 44423.7),
 ('569340854', '586855604', 39288.5),
 ('569340854', '932363145', 11840.0),
 ('569686250', '129787660', 28158.6),
 ('569686250', '571000706', 35745.8),
 ('570959891', '473895479', 13753.8),
 ('570959891', '473899739', 42340.2),
 ('570961263', '102589020', 39828.2),
 ('570961263', '112550062', 33465.6),
 ('570961263', '177944569', 34647.8),
 ('570961263', '473444133', 47569.4),
 ('570961263', '568913733', 28570.7),
 ('570961263', '568913736', 35135.0),
 ('570961263', '570961267', 10369.8),
 ('570961267', '112550062', 41126.3),
 ('570961267', '473444133', 37260.6),
 ('570961267', '568913733', 18261.8),
 ('570961267', '568913736', 24826.1),
 ('570961267', '570961263', 18497.8),
 ('571000706', '473891861', 26690.4),
 ('571000706', '586855604', 39663.2),
 ('571000706', '932363145', 49226.1),
 ('586855603', '473444133', 43934.2),
 ('586855603', '473891861', 44137.0),
 ('586855603', '568913736', 45507.9),
 ('586855603', '569300995', 26328.2),
 ('586855603', '586855604', 12025.3),
 ('586855603', '932363145', 35373.1),
 ('586855604', '473444133', 32063.9),
 ('586855604', '568913736', 33637.6),
 ('586855604', '569300995', 14457.9),
 ('586855604', '586855603', 12073.0),
 ('586855604', '932363145', 46966.8),
 ('586872756', '28673499', 35901.2),
 ('586872756', '131996046', 30246.9),
 ('586872756', '185144899', 21002.3),
 ('586872756', '318155504', 35175.8),
 ('586872756', '437953672', 28509.6),
 ('586872756', '657290419', 18592.4),
 ('586872756', '1018760167', 32828.9),
 ('586872756', '1018760500', 30756.6),
 ('620249402', '131339663', 42522.0),
 ('657290419', '28673499', 32436.8),
 ('657290419', '74570887', 47173.8),
 ('657290419', '131996046', 23212.0),
 ('657290419', '185144899', 32691.1),
 ('657290419', '318155504', 46864.6),
 ('657290419', '437953672', 40198.3),
 ('705583806', '102589020', 37078.2),
 ('705583806', '177944569', 44068.2),
 ('705583806', '177944570', 23774.4),
 ('705583806', '304357184', 25305.9),
 ('705583806', '473409634', 10807.7),
 ('705583806', '550333910', 37982.8),
 ('756963511', '74568990', 42990.4),
 ('756963511', '74568993', 36581.3),
 ('756963511', '74569476', 43926.3),
 ('756963511', '74569893', 42274.8),
 ('835854142', '55283118', 17513.1),
 ('835854142', '835854143', 967.6),
 ('835854142', '835857371', 3834.8),
 ('835854142', '835866914', 22146.7),
 ('835854143', '55283118', 17023.2),
 ('835854143', '835854142', 846.3),
 ('835854143', '835857371', 3344.9),
 ('835854143', '835866914', 21656.9),
 ('835857371', '55283118', 13709.4),
 ('835857371', '835854142', 3997.7),
 ('835857371', '835854143', 3187.7),
 ('835857371', '835866914', 18343.1),
 ('835866914', '55283118', 4680.8),
 ('835866914', '835854142', 22238.9),
 ('835866914', '835854143', 21428.9),
 ('835866914', '835857371', 18468.8),
 ('932363145', '473891861', 44957.5),
 ('932363145', '569300995', 41767.4),
 ('932363145', '569340854', 34185.6),
 ('932363145', '586855603', 39382.5),
 ('932363145', '586855604', 27464.5),
 ('975588106', '28944461', 19045.0),
 ('975588106', '313824570', 25469.1),
 ('975588106', '1037202493', 6698.7),
 ('1018748786', '473888794', 28655.2),
 ('1018748786', '473889460', 10302.4),
 ('1018748786', '473894472', 28516.4),
 ('1018748786', '569686250', 39597.1),
 ('1018760167', '28673499', 38218.3),
 ('1018760167', '131996046', 4547.0),
 ('1018760167', '185144899', 42506.8),
 ('1018760167', '304357184', 41754.7),
 ('1018760167', '550333909', 20593.0),
 ('1018760167', '550333910', 25450.7),
 ('1018760167', '586872756', 35474.7),
 ('1018760167', '657290419', 25321.3),
 ('1018760167', '1018760500', 1630.8),
 ('1018760167', '1018760929', 12316.2),
 ('1018760167', '1018761865', 19789.1),
 ('1018760500', '28673499', 36166.8),
 ('1018760500', '131996046', 2374.4),
 ('1018760500', '185144899', 40455.3),
 ('1018760500', '304357184', 45135.7),
 ('1018760500', '437953672', 47962.5),
 ('1018760500', '550333909', 23974.0),
 ('1018760500', '550333910', 28831.7),
 ('1018760500', '586872756', 33423.2),
 ('1018760500', '657290419', 23269.8),
 ('1018760500', '1018760167', 1668.9),
 ('1018760500', '1018760929', 10264.7),
 ('1037202493', '28944461', 25631.8),
 ('522668166', '131339008', 46292.2),
 ('522668166', '131339663', 26320.3),
 ('522668166', '131339880', 35503.7),
 ('522668166', '131340564', 23882.6),
 ('522668166', '131341098', 45949.1),
 ('522668166', '131341334', 43229.5),
 ('522668166', '470248189', 22888.9),
 ('522668166', '473899739', 46512.8),
 ('522668166', '620249402', 41402.4),
 ('1184659307', '102589020', 19983.6),
 ('1184659307', '177944569', 14803.2),
 ('1184659307', '177944570', 35978.4),
 ('1184659307', '473409634', 43288.6),
 ('1184659307', '570961267', 33499.1),
 ('1184659307', '705583806', 32743.8),
 ('1451255485', '131339663', 22202.2),
 ('1451255485', '131339880', 31385.7),
 ('1451255485', '131340564', 19764.6),
 ('1451255485', '131341098', 41831.1),
 ('1451255485', '131341334', 39111.4),
 ('1451255485', '131379575', 47257.7),
 ('1451255485', '470248189', 13170.9),
 ('1854655902', '473889460', 32966.3),
 ('1854655902', '473894472', 39671.3),
 ('1854655902', '569686250', 30237.7),
 ('1854655902', '1018748786', 24817.5),
 ('2411229575', '473889460', 32832.2),
 ('2411229575', '473894472', 39537.2),
 ('2411229575', '569686250', 30103.6),
 ('2411229575', '1018748786', 24683.4),
 ('4675220807', '102589020', 47235.9),
 ('4675220807', '177944570', 33932.0),
 ('4675220807', '304357184', 17020.3),
 ('4675220807', '473409634', 20965.3),
 ('4675220807', '550333909', 44033.7),
 ('4675220807', '550333910', 29862.4),
 ('4675220807', '705583806', 31934.9),
 ('5296506241', '28673499', 39008.6),
 ('5296506241', '131996046', 14575.9),
 ('5296506241', '185144899', 39262.9),
 ('5296506241', '304357184', 49357.4),
 ('5296506241', '437953672', 46770.1),
 ('5296506241', '550333909', 28195.7),
 ('5296506241', '550333910', 33053.4),
 ('5296506241', '586872756', 32230.8),
 ('10799446246', '473894472', 32316.7),
 ('10799446246', '473895479', 42100.5),
 ('10799446246', '570959891', 30398.6)]
edges = edges_radius50

#create Graph
G = create_Graph(all_nodes, edges)

# # Create a dictionary to map node IDs to their coordinates
node_coordinates = {node_id: coords for node_id, coords in all_nodes.items()}


# # Get edge labels as a dictionary (edge: weight)
edge_labels = {(u, v): d['weight'] for u, v, d in G.edges(data=True)}


print(G)
print("-----------------------------------")
print(f"len: {len(node_coordinates)}, {len(G)}")
# # Plot the graph with node labels as coordinates
#?nx.draw(G, pos=node_coordinates, with_labels=False, node_color='skyblue', labels={k: str(v) for k, v in node_coordinates.items()})
# nx.draw_networkx_edge_labels(G, pos=node_coordinates, edge_labels=edge_labels)
plt.show()

fw_distances = nx.floyd_warshall(G)

G.add_weighted_edges_from(edges)

# Create a dictionary to map node IDs to their coordinates
node_coordinates = {node_id: coords for node_id, coords in all_nodes.items()}

# Set the size of the plot
plt.figure(figsize=(10, 8))  # You can adjust the size as needed

# Plot the graph with smaller node sizes (e.g., node_size=100) and larger plot
#?nx.draw(G, pos=node_coordinates, with_labels=False, node_size=100, node_color='skyblue')



# If you need to draw labels, uncomment the following line
# nx.draw_networkx_labels(G, pos=node_coordinates, labels={node: str(coords) for node, coords in node_coordinates.items()})

# Omitted the edge labels as per previous instructions
# nx.draw_networkx_edge_labels(G, pos=node_coordinates, edge_labels=edge_labels)

# Show the plot
plt.show()
plt. savefig("aquitaine.pdf", format="pdf", bbox_inches="tight")

# Compute the Floyd-Warshall distances
fw_distances = nx.floyd_warshall(G)


#----
dominating_set = nx.algorithms.dominating_set(G)


print("An approximate minimum dominating set:", dominating_set)
#----
# Assuming 'G', 'edges', and 'all_nodes' are defined elsewhere in your code
G.add_weighted_edges_from(edges)

# Create a dictionary to map node IDs to their coordinates
node_coordinates = {node_id: coords for node_id, coords in all_nodes.items()}

# Calculate the dominating set for the graph G
dominating_set = nx.algorithms.dominating_set(G)

# Split nodes into dominating set and others
dominating_nodes = {node for node in dominating_set}
other_nodes = set(G.nodes()) - dominating_nodes

# Set the size of the plot
plt.figure(figsize=(10, 8))  # You can adjust the size as needed

# Draw nodes not in the dominating set
nx.draw_networkx_nodes(G, pos=node_coordinates, nodelist=other_nodes, node_size=100, node_color='skyblue')

# Draw nodes in the dominating set with a different color
nx.draw_networkx_nodes(G, pos=node_coordinates, nodelist=dominating_nodes, node_size=100, node_color='red')

# Draw the edges
nx.draw_networkx_edges(G, pos=node_coordinates)


# If you need to draw labels, uncomment the following line
# nx.draw_networkx_labels(G, pos=node_coordinates, labels={node: str(coords) for node, coords in node_coordinates.items()})

# Omitted the edge labels as per previous instructions
# nx.draw_networkx_edge_labels(G, pos=node_coordinates, edge_labels=edge_labels)

# Show the plot
plt.show()

